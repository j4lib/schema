<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2007-2012 The Europeana Foundation Licenced under the EUPL, 
	Version 1.1 (the "Licence") and subsequent versions as approved by the European 
	Commission; You may not use this work except in compliance with the Licence. 
	You may obtain a copy of the Licence at: http://joinup.ec.europa.eu/software/page/eupl 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the Licence is distributed on an "AS IS" basis, without warranties 
	or conditions of any kind, either express or implied. See the Licence for 
	the specific language governing permissions and limitations under the Licence. -->

<schema xmlns="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.openarchives.org/ore/terms/"
	xmlns:ore="http://www.openarchives.org/ore/terms/"
	xmlns:edm="http://www.europeana.eu/schemas/edm/" xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dcterms="http://purl.org/dc/terms/"
	xmlns:enrichment="http://www.europeana.eu/schemas/edm/enrichment/"
	xmlns:owl="http://www.w3.org/2002/07/owl#" xmlns:sch="http://purl.oclc.org/dsdl/schematron"
	elementFormDefault="qualified">

	<annotation>
		<documentation> EDM First Implementation Schema: Aggregations
		</documentation>
	</annotation>

	<import namespace="http://purl.org/dc/elements/1.1/" schemaLocation="DC.xsd"/>
	<import namespace="http://www.w3.org/1999/02/22-rdf-syntax-ns#" schemaLocation="RDF.xsd"/>
	<import namespace="http://www.europeana.eu/schemas/edm/" schemaLocation="EDM-COMMON-MAIN.xsd"/>
	<import namespace="http://www.europeana.eu/schemas/edm/enrichment/"
		schemaLocation="ENRICHMENT.xsd"/>
	<import namespace="http://www.w3.org/2002/07/owl#" schemaLocation="OWL.xsd"/>

	<element name="Aggregation">
		<complexType>
			<annotation>
				<documentation> A set of related resources (Aggregated Resources),
					grouped together
					such that the set can be treated as a single resource. This is the
					entity
					described within the ORE interoperability framework by a Resource Map.
				</documentation>
				<appinfo>
					<sch:pattern>
						<sch:rule context="ore:Aggregation">
							<sch:assert
								test="(edm:isShownAt and exists(edm:isShownAt/@rdf:resource)) or (edm:isShownBy and exists(edm:isShownBy/@rdf:resource))"
									>
								id:
								<sch:value-of select="@rdf:about"
								/>
								An ore:Aggregation must have either
								edm:isShownAt or edm:isShownBy
							</sch:assert>
						</sch:rule>
					</sch:pattern>
					<sch:pattern>
						<sch:rule context="ore:Aggregation">
							<sch:assert test="edm:dataProvider">
								id:
								<sch:value-of
									select="@rdf:about"
								/>
								An ore:Aggregation must have at least one instance of
								edm:dataProvider
							</sch:assert>
						</sch:rule>
					</sch:pattern>
					<sch:pattern>
						<sch:rule context="ore:Aggregation">

							<sch:assert test="edm:provider">
								id:
								<sch:value-of
									select="@rdf:about"
								/>
								An ore:Aggregation must have at least one instance of
								edm:provider
							</sch:assert>
						</sch:rule>
					</sch:pattern>
					<sch:pattern>
						<sch:rule context="ore:Aggregation">
							<sch:assert test="edm:rights and exists(edm:rights/@rdf:resource)"
									>
								id:
								<sch:value-of select="@rdf:about"
								/>
								An ore:Aggregation must have at least one instance of
								edm:rights
							</sch:assert>
						</sch:rule>
					</sch:pattern>
					<sch:pattern>
						<sch:rule context="ore:Aggregation/edm:provider">
							<sch:assert test="exists(./@rdf:resource) or normalize-space(.) != ''"
								>An ore:Aggregation must have a non
								empty edm:provider</sch:assert>
						</sch:rule>
					</sch:pattern>
					<sch:pattern>
						<sch:rule context="ore:Aggregation/edm:dataProvider">
							<sch:assert test="exists(./@rdf:resource) or normalize-space(.) != ''"
								>An ore:Aggregation must have a non
								empty edm:dataProvider</sch:assert>
						</sch:rule>
					</sch:pattern>

				</appinfo>
			</annotation>
			<complexContent>
				<extension base="rdf:AboutType">
					<sequence>
						<element ref="edm:aggregatedCHO" maxOccurs="1" minOccurs="1"/>
						<element ref="edm:dataProvider" maxOccurs="1" minOccurs="0"/>
						<element ref="edm:hasView" maxOccurs="unbounded" minOccurs="0"/>
						<element ref="edm:isShownAt" maxOccurs="1" minOccurs="0"/>
						<element ref="edm:isShownBy" maxOccurs="1" minOccurs="0"/>
						<element ref="edm:object" maxOccurs="1" minOccurs="0"/>
						<element ref="edm:provider" maxOccurs="1" minOccurs="1"/>
						<element ref="dc:rights" maxOccurs="unbounded" minOccurs="0"/>
						<element ref="edm:rights" maxOccurs="1" minOccurs="0"/>
					</sequence>
				</extension>
			</complexContent>
		</complexType>
	</element>

	<element name="aggregates" type="rdf:ResourceType"> </element>

</schema>
